WEBVTT

00:00.730 --> 00:02.560
Now I know what your thing is at this point.

00:02.560 --> 00:03.400
My word Andrew.

00:03.400 --> 00:05.650
This is not an update to the language.

00:05.650 --> 00:07.390
This is an entirely new language.

00:07.390 --> 00:08.820
There is so much information.

00:08.980 --> 00:10.650
Well not to worry my dear friend.

00:10.690 --> 00:16.920
Like I said before iOS 6 was probably one of if not the biggest updates to the javascript language.

00:17.050 --> 00:23.470
But all of the other subsequent updates that happen yearly are honestly pretty small just like a couple

00:23.470 --> 00:26.910
of new methods or maybe a new concept here and there.

00:27.130 --> 00:33.160
But really iOS 6 is the biggest update to javascript that's happened to date and probably will stay

00:33.160 --> 00:35.750
that way as one of the biggest updates to the language.

00:35.830 --> 00:39.210
All of the other subsequent updates will not be nearly as bad.

00:39.220 --> 00:41.330
For the most part I promise nothing though anyway.

00:41.350 --> 00:47.230
So now we've talked about destructuring the next thing to talk about is sets and maps all these sets

00:47.290 --> 00:53.190
and then maps J.S. and then I'm going to throw in the good old fashioned script tag.

00:53.230 --> 00:58.690
So while we're talking about sets and maps I figure I'll explain what they actually are.

00:58.720 --> 01:05.680
So essentially inside of javascript in the land before time there was only one type of collection originally

01:05.680 --> 01:09.980
inside of javascript and that was called an array array.

01:10.120 --> 01:17.870
As you already know is just a set of keys and values the keys are numbers that map to a particular value.

01:18.250 --> 01:24.460
But originally people wanted more than just this type of collection they wanted to use sets and they

01:24.460 --> 01:26.460
also wanted to use maps.

01:26.470 --> 01:34.570
Now since these particular types of collections or you know groups of data if you will or ways of organizing

01:34.570 --> 01:39.970
groups of data since they didn't exist in a language people would kind of hack their way around it and

01:39.970 --> 01:43.240
build their own custom implementations of sets and maps.

01:43.240 --> 01:49.040
Now a set is very similar to an array except it can't contain any duplicate.

01:49.030 --> 01:53.890
So similar to an array but it can contain duplicates.

01:53.890 --> 01:59.350
The other thing to keep in mind here is whenever you use sets most of the time you're not using them

01:59.350 --> 02:01.750
to access the values inside of them.

02:01.750 --> 02:05.350
Rather you're just checking to see if a value is there in the first place.

02:05.410 --> 02:07.300
We'll see their usefulness very soon.

02:07.360 --> 02:12.480
Maps on the other hand are key value pairs and pairs.

02:12.490 --> 02:17.980
So essentially whenever you use a map it's storing two different pieces of data and you would specify

02:17.980 --> 02:22.510
the key that you want in order to get the value that is associated with it.

02:22.510 --> 02:26.230
Now with that being said first we're going to look at a couple of the work arounds that people used

02:26.230 --> 02:28.960
to implement to simulate this functionality.

02:28.960 --> 02:32.480
And then we'll look at the way we can actually do it naturally any six.
