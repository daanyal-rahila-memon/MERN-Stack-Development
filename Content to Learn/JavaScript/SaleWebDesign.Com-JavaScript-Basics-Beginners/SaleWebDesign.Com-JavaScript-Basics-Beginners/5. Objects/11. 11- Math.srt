1
00:00:00,000 --> 00:00:04,000
So you have learned a lot about

2
00:00:04,000 --> 00:00:08,000
objects, now let's take a look at a few of the built in objects in

3
00:00:08,000 --> 00:00:12,000
JavaScript. The first one we're going to look at is the math object.

4
00:00:12,000 --> 00:00:16,000
So here in Google let's search for JavaScript math

5
00:00:16,000 --> 00:00:20,000
the first link is on developer.

6
00:00:20,000 --> 00:00:24,000
mozilla.org, this is your first reference for learning about all the

7
00:00:24,000 --> 00:00:28,000
objects in JavaScript. So let's take a look at the math object,

8
00:00:28,000 --> 00:00:32,000
you can see this is one of the built-in objects with properties

9
00:00:32,000 --> 00:00:36,000
and methods for mathematical constants and functions.

10
00:00:36,000 --> 00:00:40,000
So if you scroll down you can see the properties, for

11
00:00:40,000 --> 00:00:44,000
example one of the useful properties is math.PI

12
00:00:44,000 --> 00:00:48,000
so this is the pi number. We have a bunch of other properties here,

13
00:00:48,000 --> 00:00:52,000
and below them we've got all the methods, the first one is

14
00:00:52,000 --> 00:00:56,000
absolute, which returns the absolute value of a number so

15
00:00:56,000 --> 00:01:00,000
if you give it a negative number, it returns it's positive value.

16
00:01:00,000 --> 00:01:04,000
So there are a lot of methods here, I'm not going to go through each of them, it's really a waste of

17
00:01:04,000 --> 00:01:08,000
your time and my time, all I want you to know is that we've got this math

18
00:01:08,000 --> 00:01:12,000
object built into Javascript, so in your applications if

19
00:01:12,000 --> 00:01:16,000
you ever have to deal with mathematical calculations, just come

20
00:01:16,000 --> 00:01:20,000
back to this page and see what methods we can use. In this lecture

21
00:01:20,000 --> 00:01:24,000
I'm going to give you a quick demo of a couple of these methods, the first one

22
00:01:24,000 --> 00:01:28,000
is the random method. So, let's take a look,

23
00:01:28,000 --> 00:01:32,000
for each of these methods we have a comprehensive

24
00:01:32,000 --> 00:01:36,000
documentation along with examples.

25
00:01:36,000 --> 00:01:40,000
Really, really easy. So here in the console, lets

26
00:01:40,000 --> 00:01:44,000
call the random method. So every time we call

27
00:01:44,000 --> 00:01:48,000
this method we get a new random number between 0 to

28
00:01:48,000 --> 00:01:52,000
1. Now if you want to map this to a given range you need a simple

29
00:01:52,000 --> 00:01:56,000
mathematical formula. Back to the documentation for the

30
00:01:56,000 --> 00:02:00,000
random method, if you scroll down from the list of examples,

31
00:02:00,000 --> 00:02:04,000
we can see this example. Getting a random number between two values.

32
00:02:04,000 --> 00:02:08,000
So basically you need a function like this, that takes a min and

33
00:02:08,000 --> 00:02:12,000
max, and generates a random number between these two values.

34
00:02:12,000 --> 00:02:16,000
Pretty self explanatory, you don't need more explanation. Another

35
00:02:16,000 --> 00:02:20,000
useful method is math.round, so we can give it 1.

36
00:02:20,000 --> 00:02:24,000
9, and it returns 2. We also have

37
00:02:24,000 --> 00:02:28,000
math.max. We can give it a bunch of arguments, and it will

38
00:02:28,000 --> 00:02:32,000
return the largest number in the list. Now later in the course

39
00:02:32,000 --> 00:02:36,000
this is going to be one of your exercises. So you're going to write a

40
00:02:36,000 --> 00:02:40,000
function like the max method here, that takes a very (?) number

41
00:02:40,000 --> 00:02:44,000
of arguments and returns the largest value. We also

42
00:02:44,000 --> 00:02:48,000
have math.min which returns the

43
00:02:48,000 --> 00:02:52,000
smallest number in this list. So I leave it npm to you to look at all the

44
00:02:52,000 --> 00:02:56,000
methods available in the math object.

