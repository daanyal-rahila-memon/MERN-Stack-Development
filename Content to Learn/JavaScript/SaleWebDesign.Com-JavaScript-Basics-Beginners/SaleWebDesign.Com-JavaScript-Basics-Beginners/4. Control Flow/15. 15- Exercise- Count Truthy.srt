1
00:00:00,000 --> 00:00:04,000
In this exercise

2
00:00:04,000 --> 00:00:08,000
I want you to create a function called countTruthy which

3
00:00:08,000 --> 00:00:12,000
takes an array and returns a number of truthy elements in this array.

4
00:00:12,000 --> 00:00:16,000
Now what are these truthy or false values, let me

5
00:00:16,000 --> 00:00:20,000
quickly refresh your memory. Sometimes when we have an if

6
00:00:20,000 --> 00:00:24,000
statement, we might pass a boolean true or false

7
00:00:24,000 --> 00:00:28,000
as the condition here, for example we might have a constant called

8
00:00:28,000 --> 00:00:32,000
isActive, we set this to true, and when we use

9
00:00:32,000 --> 00:00:36,000
this constant as the condition here, we get

10
00:00:36,000 --> 00:00:40,000
this Hello message on the console. Because this

11
00:00:40,000 --> 00:00:44,000
is a boolean true. But sometimes what we have

12
00:00:44,000 --> 00:00:48,000
in our if statement is not necessarily a boolean value, it could

13
00:00:48,000 --> 00:00:52,000
be a string, it could be a number, it could be an object, so the JavaScript number

14
00:00:52,000 --> 00:00:56,000
engine tries to convert that value to something that is like a boolean

15
00:00:56,000 --> 00:01:00,000
but is not a boolean. Here's an example, let's say I have a constant,

16
00:01:00,000 --> 00:01:04,000
called name, I set this to a string, Mosh.

17
00:01:04,000 --> 00:01:08,000
Now if I pass name here, obviously name is

18
00:01:08,000 --> 00:01:12,000
a string, it's not a boolean true or false, so the JavaScript engine

19
00:01:12,000 --> 00:01:16,000
tries to interpret this as truthy or falsey

20
00:01:16,000 --> 00:01:20,000
so when we run this code you can see we still see the hello

21
00:01:20,000 --> 00:01:24,000
message, because we are dealing with a string of characters.

22
00:01:24,000 --> 00:01:28,000
So this is what we call a truthy value. It's

23
00:01:28,000 --> 00:01:32,000
not the boolean true, it's truthy. In contrast,

24
00:01:32,000 --> 00:01:36,000
if we had an empty string, JavaScript engine would

25
00:01:36,000 --> 00:01:40,000
save this as falsey. Again, it's not the boolean

26
00:01:40,000 --> 00:01:44,000
false. It's falsey. Now when we run this code,

27
00:01:44,000 --> 00:01:48,000
you no longer see the Hello message. So that's all about truthy and falsey

28
00:01:48,000 --> 00:01:52,000
values. Now let's quickly review the list of falsey

29
00:01:52,000 --> 00:01:56,000
values in JavaScript. So undefined

30
00:01:56,000 --> 00:02:00,000
null. Empty string. The boolean

31
00:02:00,000 --> 00:02:04,000
false. 0 and not a number.

32
00:02:04,000 --> 00:02:08,000
You learned about this value in an earlier exercise, that's something that I forgot

33
00:02:08,000 --> 00:02:12,000
to mention when I talked about all the falsey values in JavaScript, but

34
00:02:12,000 --> 00:02:16,000
this is the complete list of falsey values in JavaScript.

35
00:02:16,000 --> 00:02:20,000
So now, your job is to create a function called

36
00:02:20,000 --> 00:02:24,000
truthy that gets an array, and returns the number of

37
00:02:24,000 --> 00:02:28,000
truthy values in this array. So here's an example, if I declare

38
00:02:28,000 --> 00:02:32,000
this array, and set it to 123,

39
00:02:32,000 --> 00:02:36,000
so here we have 3 truthy values. We call

40
00:02:36,000 --> 00:02:40,000
countTruthy, pass the array, and immediately

41
00:02:40,000 --> 00:02:44,000
send the result to console.log. Save the changes

42
00:02:44,000 --> 00:02:48,000
so we get 3 here. Now if we add

43
00:02:48,000 --> 00:02:52,000
0 here, because 0 here is a falsey value,

44
00:02:52,000 --> 00:02:56,000
we still get 3. If you add null, undefined and empty string,

45
00:02:56,000 --> 00:03:00,000
we still get 3. If I remove 1 of these numbers, let's say

46
00:03:00,000 --> 00:03:04,000
1, we get 2. So

47
00:03:04,000 --> 00:03:08,000
go ahead, do this exercise. And when you're done, come back and continue watching.

48
00:03:08,000 --> 00:03:12,000
Alright, to count the

49
00:03:12,000 --> 00:03:16,000
number of truthy values, first I'm going to declare a variable

50
00:03:16,000 --> 00:03:20,000
called count, and initialize it to 0. Now

51
00:03:20,000 --> 00:03:24,000
we need to use a for of loop to iterate this array,

52
00:03:24,000 --> 00:03:28,000
and for each element we need to check to see if that element is truthy

53
00:03:28,000 --> 00:03:32,000
or not. If it's truthy, we're going to implement count.

54
00:03:32,000 --> 00:03:36,000
So, for let value of

55
00:03:36,000 --> 00:03:40,000
array. Now, if this value

56
00:03:40,000 --> 00:03:44,000
is truthy we simply increment

57
00:03:44,000 --> 00:03:48,000
count. And finally we return this count.

58
00:03:48,000 --> 00:03:52,000
That's all the code you had to write. So note right here I'm not comparing this

59
00:03:52,000 --> 00:03:56,000
value with all those false values. In other words,

60
00:03:56,000 --> 00:04:00,000
I didn't write code like this, if value is not

61
00:04:00,000 --> 00:04:04,000
false, or value is not undefined

62
00:04:04,000 --> 00:04:08,000
this is a very pour way of writing this code.

63
00:04:08,000 --> 00:04:12,000
We don't want to have 5 conditions here for every

64
00:04:12,000 --> 00:04:16,000
false value. Simply pass this value here, now that value

65
00:04:16,000 --> 00:04:20,000
might be a boolean, or a non boolean, if it's not a boolean,

66
00:04:20,000 --> 00:04:24,000
the JavaScript engine tries to interpret it as truthy

67
00:04:24,000 --> 00:04:28,000
or falsey, so if the result is truthy, then

68
00:04:28,000 --> 00:04:32,000
the count will be incremented earlier than that. A simple as that.

