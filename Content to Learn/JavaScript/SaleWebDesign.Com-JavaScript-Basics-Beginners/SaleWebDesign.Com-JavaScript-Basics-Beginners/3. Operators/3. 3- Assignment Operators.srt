1
00:00:00,000 --> 00:00:04,000
The second

2
00:00:04,000 --> 00:00:08,000
category of operators we're going to look at is assignment operators.

3
00:00:08,000 --> 00:00:12,000
We have already seen an example of an assignment operator. So here,

4
00:00:12,000 --> 00:00:16,000
we are using the simple assignment operator to assign a value

5
00:00:16,000 --> 00:00:20,000
in this case 10 to x, but we have a few more

6
00:00:20,000 --> 00:00:24,000
assignment operators. Let me show you. So in the last lecture you learned

7
00:00:24,000 --> 00:00:28,000
about the increment operator. With this we

8
00:00:28,000 --> 00:00:32,000
increment the value of x by 1. This expression here is

9
00:00:32,000 --> 00:00:36,000
exactly equivalent to this.

10
00:00:36,000 --> 00:00:40,000
So, we read the value of x, add 1

11
00:00:40,000 --> 00:00:44,000
to it, and then using the assignment operator, assign this new

12
00:00:44,000 --> 00:00:48,000
value to x. But what if in this example

13
00:00:48,000 --> 00:00:52,000
instead of adding 1 to x we want to add let's say

14
00:00:52,000 --> 00:00:56,000
5. Well, this increment operator will not work.

15
00:00:56,000 --> 00:01:00,000
So, how can we do that. Well this is one simple way, but we have

16
00:01:00,000 --> 00:01:04,000
a short hand, we can use the addition,

17
00:01:04,000 --> 00:01:08,000
assignment operator like this. So line 5,

18
00:01:08,000 --> 00:01:12,000
and line 4 are exactly the same. Here's another example.

19
00:01:12,000 --> 00:01:16,000
Let's imagine we want to multiply the value of x by 3. So,

20
00:01:16,000 --> 00:01:20,000
we can write it like this, x = x

21
00:01:20,000 --> 00:01:24,000
times 3, or we can use, v

22
00:01:24,000 --> 00:01:28,000
multiplication assignment operator like this. So all the other

23
00:01:28,000 --> 00:01:32,000
arithmetic operators you learned about in the last lecture,

24
00:01:32,000 --> 00:01:36,000
addition, subtraction, division, multiplication, and

25
00:01:36,000 --> 00:01:40,000
the remainder operators, all of this have a combination

26
00:01:40,000 --> 00:01:44,000
with the assignment operator.

